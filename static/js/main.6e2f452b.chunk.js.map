{"version":3,"sources":["logo.svg","components/Test.js","App.js","reportWebVitals.js","index.js"],"names":["initialState","CounterState","d","i","c","s","Test","answers","key","value","useState","index","setIndex","state1","setstate1","counter","setCounter","test","map","item","onClick","console","log","prev","length","onChoose","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4MAAe,I,0BCETA,EACK,EAILC,EAAe,CACjBC,EAAG,EACHC,EAAG,EACHC,EAAE,EACFC,EAAE,GAqISC,MAjIf,WACI,IAAMC,EAAU,CACb,CAAE,CAACC,IAAI,IAAIC,MAAO,0DAAc,CAACD,IAAI,IAAKC,MAAO,8CAAY,CAACD,IAAK,IAAKC,MAAO,gEAAe,CAACD,IAAI,IAAKC,MAAO,mFAC/G,CAAE,CAACD,IAAI,IAAIC,MAAO,kFAAkB,CAACD,IAAI,IAAKC,MAAO,gEAAe,CAACD,IAAK,IAAKC,MAAO,4EAAiB,CAACD,IAAI,IAAKC,MAAO,+FACxH,CAAE,CAACD,IAAI,IAAIC,MAAO,4EAAiB,CAACD,IAAI,IAAKC,MAAO,wFAAmB,CAACD,IAAK,IAAKC,MAAO,wCAAW,CAACD,IAAI,IAAKC,MAAO,yCACrH,CAAE,CAACD,IAAI,IAAIC,MAAO,8CAAY,CAACD,IAAI,IAAKC,MAAO,kFAAkB,CAACD,IAAK,IAAKC,MAAO,kFAAkB,CAACD,IAAI,IAAKC,MAAO,+FACtH,CAAE,CAACD,IAAI,IAAIC,MAAO,4EAAiB,CAACD,IAAI,IAAKC,MAAO,sEAAgB,CAACD,IAAK,IAAKC,MAAO,gEAAe,CAACD,IAAI,IAAKC,MAAO,sDAN7G,EASUC,mBAASV,GATnB,mBASTW,EATS,KASFC,EATE,OAUYF,mBAASH,EAAQI,IAV7B,mBAUTE,EAVS,KAUDC,EAVC,OAYiBJ,mBAAST,GAZ1B,mBAYNc,EAZM,KAYGC,EAZH,KA2GZC,EAAOJ,EAAOK,KAAI,SAACC,EAAMhB,GACzB,OACI,qCACA,wBAAQiB,QAAS,kBA7CF,SAACZ,GAEZ,OADJa,QAAQC,IAAI,SAAUd,GACVA,GACJ,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACDQ,GAAW,SAAAO,GAAI,kCAASA,GAAT,kBAAgBf,EAAMO,EAAQP,GAAM,OACnDa,QAAQC,IAAI,UAAUP,EAAQP,IAC9B,MACJ,QACDa,QAAQC,IAAI,aAG3BD,QAAQC,IAAI,UAAWd,GACvBa,QAAQC,IAAI,SAAUX,GAClBU,QAAQC,IAAI,kBAAmBf,EAAQI,IACxCJ,EAAQiB,OAAUb,IACjBC,EAASD,EAAO,GAChBG,EAAUP,EAAQI,EAAO,IACzBU,QAAQC,IAAI,SAAUX,GACtBU,QAAQC,IAAI,kBAAmBf,EAAQI,KAwBbc,CAASN,EAAKX,MAApC,SAA2CW,EAAKV,QACjDY,QAAQC,IAAI,UAAWH,SAK1B,OACI,mCAEDR,IAAUJ,EAAQiB,OAAQ,GAxB7BH,QAAQC,IAAI,UAAWP,GAEnB,qCACA,sCAASA,EAAQb,KACjB,sCAASa,EAAQZ,KACjB,sCAASY,EAAQV,KACjB,sCAASU,EAAQX,KAChBiB,QAAQC,IAAI,UAAWP,OAiBcE,KCxH/BS,MAVf,WACE,OACE,sBAAKC,UAAU,MAAf,UACC,2LACA,uZACD,cAAC,EAAD,QCGWC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.6e2f452b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, {useState, useMemo} from 'react'\r\n\r\nconst initialState = {\r\n    index: 0,\r\n\r\n}\r\n\r\nconst CounterState = {\r\n    d: 0,\r\n    i: 0,\r\n    c:0,\r\n    s:0,\r\n}\r\n\r\n\r\nfunction Test() {\r\n    const answers = [\r\n       [ {key:\"s\",value: 'Сдержаный'}, {key:\"d\", value: 'Сильный'}, {key: \"c\", value: 'Заботливый'}, {key:\"i\", value: 'Экспрессивный'}],\r\n       [ {key:\"d\",value: 'Первопроходец'}, {key:\"c\", value: 'Корректный'}, {key: \"i\", value: 'Восторженный'}, {key:\"s\", value: 'Удовлетворенный'}],\r\n       [ {key:\"s\",value: 'Старательный'}, {key:\"i\", value: 'Воодушевленный'}, {key: \"d\", value: 'Смелый'}, {key:\"c\", value: 'Точный'}],\r\n       [ {key:\"d\",value: 'Спорщик'}, {key:\"c\", value: 'Сомневающийся'}, {key: \"s\", value: 'Нерешительный'}, {key:\"i\", value: 'Непредсказуемый'}],\r\n       [ {key:\"c\",value: 'Уважительный'}, {key:\"i\", value: 'Общительный'}, {key: \"s\", value: 'Терпеливый'}, {key:\"d\", value: 'Отважный'}],\r\n      \r\n    ]\r\nconst [index, setIndex] = useState(initialState.index)\r\nconst [state1, setstate1] = useState(answers[index])\r\n//    const [counterD, setCounterD] = useState(CounterState.d)\r\n   const [counter, setCounter] = useState(CounterState)\r\n\r\nconst onCounter = (name)=> {\r\n//    setCounter([name] +=1)\r\n}\r\n\r\nvar d = 0;\r\nlet i = 0;\r\nlet c = 0;\r\nlet s = 0;\r\n\r\nconst onChooseOld = (key) => {\r\nconsole.log('key111', key)\r\n    switch (key) {\r\n        case 'd':\r\n            // let d= counterD +1;\r\n\r\n            // setCounterD(counterD+1);\r\n            //setCounter(prev => ({d:d}))\r\n            // ++d ;\r\n            setCounter(prev => ({...prev, d : counter.d+1 }))\r\n            //onCounter('d')\r\n            // console.log('counter.d', counterD)\r\n            console.log('d',d)\r\n            break;\r\n        case 'i':\r\n            setCounter(prev => ({...prev, i: counter.i+1}))\r\n            console.log('counter.i', counter.i)\r\n            break;\r\n        case 'c':\r\n            setCounter(prev => ({...prev, c:counter.c +1}))\r\n            console.log('counter.c', counter.c)\r\n            break;\r\n        case 's':\r\n            setCounter(prev => ({...prev, s: counter.s +1}))\r\n            console.log('counter.s',counter.s)\r\n            break;\r\n        default:\r\n       console.log('vse huevo')\r\n      }\r\n\r\n      console.log('key0000', key)\r\n      console.log('index0', index)\r\n          console.log('answers[index]0', answers[index])\r\n      if(answers.length -1 > index ) {\r\n          setIndex(index +1)\r\n          setstate1(answers[index +1])  \r\n          console.log('index1', index)\r\n          console.log('answers[index]1', answers[index])\r\n      }\r\n    }\r\n\r\n    \r\n      const onChoose = (key) => {\r\n        console.log('key111', key)\r\n            switch (key) {\r\n                case 'd':                 \r\n                case 'i':                   \r\n                case 'c':                   \r\n                case 's':\r\n                    setCounter(prev => ({...prev, [key]: counter[key] +1}))\r\n                    console.log('counter',counter[key])\r\n                    break;\r\n                default:\r\n               console.log('vse huevo')\r\n              }\r\n\r\nconsole.log('key0000', key)\r\nconsole.log('index0', index)\r\n    console.log('answers[index]0', answers[index])\r\nif(answers.length  > index ) {\r\n    setIndex(index +1)\r\n    setstate1(answers[index +1])  \r\n    console.log('index1', index)\r\n    console.log('answers[index]1', answers[index])\r\n}\r\n// if(answers.length -1 === index){\r\n//    console.log('the end')\r\n// }\r\n}\r\n\r\n\r\nconst result =()=> {\r\n    console.log('counter', counter)\r\n    return (\r\n        <>\r\n        <p> D = {counter.d}</p>\r\n        <p> I = {counter.i}</p>\r\n        <p> S = {counter.s}</p>\r\n        <p> C = {counter.c}</p>\r\n        {console.log('counter', counter)}\r\n        </>\r\n    )\r\n}\r\n\r\nlet test = state1.map((item, i) => {\r\n    return (\r\n        <>\r\n        <button onClick={()=> onChoose(item.key)}>{item.value}</button>\r\n      {console.log('item000', item)}\r\n      </>\r\n    )\r\n  });\r\n\r\n    return (\r\n        <>\r\n        \r\n      {index === answers.length -1? result(): test}\r\n\r\n        \r\n       \r\n        \r\n        </>\r\n    )\r\n    \r\n}\r\n\r\nexport default Test;","import logo from './logo.svg';\nimport './App.css';\nimport Test from './components/Test';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n     <h1>Тест на определение личности</h1>\n     <h3>Выберите слово, которое, на Ваш взгляд, наиболее точно характеризует Вас.</h3>\n    <Test/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}